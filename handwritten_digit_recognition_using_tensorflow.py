# -*- coding: utf-8 -*-
"""Handwritten Digit Recognition Using TensorFlow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HKQ7QEtO8e80rUEj2enBzX6lrFaKMp4K
"""

# TensorFlow kütüphanesini içe aktardım
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.utils import to_categorical

# MNIST veri setini yükledim
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Verileri normalize ettik (0-1 aralığına çekmek modelin daha hızlı öğrenmesini sağlar)
x_train = x_train / 255.0
x_test = x_test / 255.0

# Etiketleri one-hot vektörüne çevirdik
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

# Modeli oluşturma (3 katmanlı basit bir MLP)
model = Sequential([
    Flatten(input_shape=(28, 28)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')  # 10 rakam sınıfı
])

# Modeli derlemesi
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Modeli eğitimi
model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test))

# Test verisi üzerinde doğruluğu değerlendirdik
test_loss, test_acc = model.evaluate(x_test, y_test)
print("Test doğruluk oranı:", test_acc)

import matplotlib.pyplot as plt
import numpy as np

#ilk 10 tahmini görselleştirdik
predictions = model.predict(x_test)

for i in range(10):
    plt.imshow(x_test[i], cmap='gray')
    plt.title(f"Tahmin: {np.argmax(predictions[i])}, Gerçek: {np.argmax(y_test[i])}")
    plt.axis('off')
    plt.show()

